name: Unit tests
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
jobs:
  test_orchestrator:
    runs-on: ubuntu-latest
    environment: secret
    services:

      auth_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 6000:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      auth:
        image: us-east1-docker.pkg.dev/composite-bruin-419400/repo/auth-test
        env:
          AUTH_DATABASE_URL_PATH: postgres://postgres:postgres@auth_db:5432/postgres
          AUTH_SECRET: secret
          DATABASE_URL: postgres://postgres:postgres@auth_db:5432/postgres
        ports:
          - 6050:80

      subscription_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 6400:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      subscription:
        image: us-east1-docker.pkg.dev/composite-bruin-419400/repo/subscription
        env:
          AUTH_HOST: http://auth
          AUTH_PATH_AUTH: /auth/auth
          SUBSCRIPTION_DB_USER: postgres
          SUBSCRIPTION_DB_HOST: subscription_db
          SUBSCRIPTION_DB_NAME: postgres
          SUBSCRIPTION_DB_PASSWORD: postgres
          SUBSCRIPTION_DB_PORT: 5432
        ports:
          - 6450:80
   
      partner_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 6600:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      partner:
        image: us-east1-docker.pkg.dev/composite-bruin-419400/repo/partner
        env:
          AUTH_HOST: http://auth
          AUTH_PATH_AUTH: /auth/auth
          AUTH_PORT: 80
          PARTNER_DB_USER: postgres
          PARTNER_DB_HOST: partner_db
          PARTNER_DB_NAME: postgres
          PARTNER_DB_PASSWORD: postgres
          PARTNER_DB_PORT: 5432
        ports:
          - 6650:80
   
      sportmen_db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 6200:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      sportmen:
        image: us-east1-docker.pkg.dev/composite-bruin-419400/repo/sportmen
        env:
          AUTH_HOST: http://auth
          AUTH_PATH_AUTH: /auth/auth
          SPORTMEN_DB_USER: postgres
          SPORTMEN_DB_HOST: sportmen_db
          SPORTMEN_DB_NAME: postgres
          SPORTMEN_DB_PASSWORD: postgres
          SPORTMEN_DB_PORT: 5432
        ports:
          - 6250:80
  
      orchestrator:
        image: us-east1-docker.pkg.dev/composite-bruin-419400/repo/orchestrator
        env:
          AUTH_HOST: http://auth
          SUB_HOST: http://subscription
          SPORT_HOST: http://sportment
          PARTNER_HOST: http://partner
          AUTH_PATH_REGISTER: /auth/register
          SPORT_PATH_CREATE: /sportmen
          PARTNER_PATH_CREATE: /partner
          SUB_PATH_LIST: /subscription/list
          AUTH_PATH_DELETE: /auth/delete
          SPORT_PATH_DELETE: /sportmen
          AUTH_PATH_LOGIN: /auth/login
          SPORT_PATH_GET: /sportmen
          PARTNER_PATH_GET: /partner
          SUB_PATH_GET: /subscription

        ports:
          - 6350:80
 

    steps:
      - uses: actions/checkout@v1

      - name: Ping Auth
        run: curl  -X GET 'localhost:6050/auth/ping'
      - name: Ping Sportmen
        run: curl  -X GET 'localhost:6250/sportmen/ping'
      - name: Ping Partner
        run: curl  -X GET 'localhost:6650/partner/ping'
      - name: Ping Subscription
        run: curl 'localhost:6450/subscription/ping'
      - name: Ping Orchestrator
        run: curl 'localhost:6350/orchestrator/ping'
      
      - name: Register Orchestartor
        run: |
          curl POST 'localhost:6350/orchestrator/register/sportman' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "email": "tejo@email.com",
          "password": "password",
          "name": "Brahian",
          "last_name": "Munar",
          "age": 26,
          "weight": 63,
          "height": 163,
          "gender": "superman",
          "identification_type": "CC",
          "identification": "314159",
          "country_birth": "Colombia",
          "city_birth": "Cali",
          "country_residence": "Colombia",
          "city_residence": "Elvira",
          "length_residence": 26,
          "sports": [
            {
              "sport": "tejo"
            }
          ]
          }'
        